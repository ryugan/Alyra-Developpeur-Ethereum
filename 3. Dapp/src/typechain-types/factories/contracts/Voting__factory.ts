/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Voting, VotingInterface } from "../../contracts/Voting";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "strProposal",
        type: "string",
      },
    ],
    name: "ProposalRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "voterAddress",
        type: "address",
      },
    ],
    name: "VoterRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Voting.WorkflowStatus",
        name: "previousStatus",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum Voting.WorkflowStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "WorkflowStatusChange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_desc",
        type: "string",
      },
    ],
    name: "addProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "addVoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endProposalsRegistering",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endVotingSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getOneProposal",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "voteCount",
            type: "uint256",
          },
        ],
        internalType: "struct Voting.Proposal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalsList",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getVoter",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isRegistered",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasVoted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "votedProposalId",
            type: "uint256",
          },
        ],
        internalType: "struct Voting.Voter",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isVoter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "setVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startProposalsRegistering",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startVotingSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tallyVotes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "winningProposalID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "workflowStatus",
    outputs: [
      {
        internalType: "enum Voting.WorkflowStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200003860201b60201c565b6200004060201b60201c565b62000104565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612c7380620001146000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063a7bfab16116100a2578063d4f50f9811610071578063d4f50f981461024b578063d87c4be31461027b578063ee74c67814610299578063f2fde38b146102a3578063f4ab9adf146102bf57610116565b8063a7bfab161461020f578063bdc0143114610219578063c7038a4e14610237578063c88af42f1461024157610116565b8063715018a6116100e9578063715018a61461017b5780638da5cb5b146101855780638f32d59b146101a3578063a1edffa2146101c1578063a2788cce146101df57610116565b8063230796ae1461011b5780632fdae3c514610137578063378a217814610153578063578178c01461015d575b600080fd5b61013560048036038101906101309190611a08565b6102db565b005b610151600480360381019061014c9190611a9a565b6105d6565b005b61015b610862565b005b6101656109cf565b6040516101729190611b77565b60405180910390f35b610183610c07565b005b61018d610c1b565b60405161019a9190611bda565b60405180910390f35b6101ab610c44565b6040516101b89190611c10565b60405180910390f35b6101c9610c81565b6040516101d69190611ca2565b60405180910390f35b6101f960048036038101906101f49190611a08565b610c94565b6040516102069190611d53565b60405180910390f35b610217610dfb565b005b610221610ee1565b60405161022e9190611d84565b60405180910390f35b61023f610ee7565b005b610249611062565b005b61026560048036038101906102609190611dcb565b611147565b6040516102729190611e49565b60405180910390f35b61028361126f565b6040516102909190611c10565b60405180910390f35b6102a16112c6565b005b6102bd60048036038101906102b89190611dcb565b6113ac565b005b6102d960048036038101906102d49190611dcb565b61142f565b005b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661036a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036190611eb0565b60405180910390fd5b6003600581111561037e5761037d611c2b565b5b600260009054906101000a900460ff1660058111156103a05761039f611c2b565b5b146103e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d790611f42565b60405180910390fd5b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16151503610476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046d90611fae565b60405180910390fd5b60038054905081106104bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b49061201a565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff021916908315150217905550600381815481106105735761057261203a565b5b9060005260206000209060020201600101600081548092919061059590612098565b91905055507f4d99b957a2bc29a30ebd96a7be8e68fe50a3c701db28a91436490b7d53870ca433826040516105cb9291906120e0565b60405180910390a150565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c90611eb0565b60405180910390fd5b6001600581111561067957610678611c2b565b5b600260009054906101000a900460ff16600581111561069b5761069a611c2b565b5b146106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d290612155565b60405180910390fd5b6040516020016106ea9061219b565b6040516020818303038152906040528051906020012082826040516020016107139291906121f7565b6040516020818303038152906040528051906020012003610769576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107609061228d565b60405180910390fd5b610771611989565b82828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508160000181905250600381908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190816107ff91906124e8565b506020820151816001015550507f1d9fd49d94f81cbb79f6c7464d5b6036d7b34f7feacb3050b31e4e202b7f6dd8610848600160038054905061084291906125ba565b836115d8565b6040516108559190611b77565b60405180910390a1505050565b61086a61161e565b6004600581111561087e5761087d611c2b565b5b600260009054906101000a900460ff1660058111156108a05761089f611c2b565b5b146108e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d790612660565b60405180910390fd5b600080600090505b60038054905081101561095e57600382815481106109095761090861203a565b5b9060005260206000209060020201600101546003828154811061092f5761092e61203a565b5b906000526020600020906002020160010154111561094b578091505b808061095690612098565b9150506108e8565b50806001819055506005600260006101000a81548160ff0219169083600581111561098c5761098b611c2b565b5b02179055507f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f600460056040516109c4929190612680565b60405180910390a150565b6060600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610a60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5790611eb0565b60405180910390fd5b600060038054905011610aa8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9f9061271b565b60405180910390fd5b60006040518060200160405280600081525090506000600380549050905060005b81811015610bfe57600060038281548110610ae757610ae661203a565b5b9060005260206000209060020201604051806040016040529081600082018054610b109061230b565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3c9061230b565b8015610b895780601f10610b5e57610100808354040283529160200191610b89565b820191906000526020600020905b815481529060010190602001808311610b6c57829003601f168201915b50505050508152602001600182015481525050905083610ba983836115d8565b604051602001610bba929190612777565b604051602081830303815290604052604051602001610bd991906127c1565b6040516020818303038152906040529350508080610bf690612098565b915050610ac9565b50819250505090565b610c0f61161e565b610c19600061169c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60003373ffffffffffffffffffffffffffffffffffffffff16610c65610c1b565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600260009054906101000a900460ff1681565b610c9c611989565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610d2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2290611eb0565b60405180910390fd5b60038281548110610d3f57610d3e61203a565b5b9060005260206000209060020201604051806040016040529081600082018054610d689061230b565b80601f0160208091040260200160405190810160405280929190818152602001828054610d949061230b565b8015610de15780601f10610db657610100808354040283529160200191610de1565b820191906000526020600020905b815481529060010190602001808311610dc457829003601f168201915b505050505081526020016001820154815250509050919050565b610e0361161e565b60036005811115610e1757610e16611c2b565b5b600260009054906101000a900460ff166005811115610e3957610e38611c2b565b5b14610e79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7090611f42565b60405180910390fd5b6004600260006101000a81548160ff02191690836005811115610e9f57610e9e611c2b565b5b02179055507f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f60036004604051610ed7929190612680565b60405180910390a1565b60015481565b610eef61161e565b60006005811115610f0357610f02611c2b565b5b600260009054906101000a900460ff166005811115610f2557610f24611c2b565b5b14610f65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5c90612859565b60405180910390fd5b6001600260006101000a81548160ff02191690836005811115610f8b57610f8a611c2b565b5b0217905550610f98611989565b6040518060400160405280600781526020017f47454e455349530000000000000000000000000000000000000000000000000081525081600001819052506003819080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001908161101791906124e8565b506020820151816001015550507f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f60006001604051611057929190612680565b60405180910390a150565b61106a61161e565b6001600581111561107e5761107d611c2b565b5b600260009054906101000a900460ff1660058111156110a05761109f611c2b565b5b146110e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d7906128eb565b60405180910390fd5b60028060006101000a81548160ff0219169083600581111561110557611104611c2b565b5b02179055507f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f6001600260405161113d929190612680565b60405180910390a1565b61114f6119a3565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166111de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d590611eb0565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016001820154815250509050919050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16905090565b6112ce61161e565b600260058111156112e2576112e1611c2b565b5b600260009054906101000a900460ff16600581111561130457611303611c2b565b5b14611344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133b9061297d565b60405180910390fd5b6003600260006101000a81548160ff0219169083600581111561136a57611369611c2b565b5b02179055507f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f600260036040516113a2929190612680565b60405180910390a1565b6113b461161e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141a90612a0f565b60405180910390fd5b61142c8161169c565b50565b61143761161e565b6000600581111561144b5761144a611c2b565b5b600260009054906101000a900460ff16600581111561146d5761146c611c2b565b5b146114ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a490612aa1565b60405180910390fd5b60011515600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16151503611543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153a90612b0d565b60405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507fb6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd816040516115cd9190611bda565b60405180910390a150565b60606115e383611760565b82600001516115f58460200151611760565b60405160200161160793929190612b53565b604051602081830303815290604052905092915050565b61162661182e565b73ffffffffffffffffffffffffffffffffffffffff16611644610c1b565b73ffffffffffffffffffffffffffffffffffffffff161461169a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169190612bee565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60606000600161176f84611836565b01905060008167ffffffffffffffff81111561178e5761178d6122ad565b5b6040519080825280601f01601f1916602001820160405280156117c05781602001600182028036833780820191505090505b509050600082602001820190505b600115611823578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161181757611816612c0e565b5b049450600085036117ce575b819350505050919050565b600033905090565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611894577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161188a57611889612c0e565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106118d1576d04ee2d6d415b85acef810000000083816118c7576118c6612c0e565b5b0492506020810190505b662386f26fc10000831061190057662386f26fc1000083816118f6576118f5612c0e565b5b0492506010810190505b6305f5e1008310611929576305f5e100838161191f5761191e612c0e565b5b0492506008810190505b612710831061194e57612710838161194457611943612c0e565b5b0492506004810190505b60648310611971576064838161196757611966612c0e565b5b0492506002810190505b600a8310611980576001810190505b80915050919050565b604051806040016040528060608152602001600081525090565b6040518060600160405280600015158152602001600015158152602001600081525090565b600080fd5b600080fd5b6000819050919050565b6119e5816119d2565b81146119f057600080fd5b50565b600081359050611a02816119dc565b92915050565b600060208284031215611a1e57611a1d6119c8565b5b6000611a2c848285016119f3565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611a5a57611a59611a35565b5b8235905067ffffffffffffffff811115611a7757611a76611a3a565b5b602083019150836001820283011115611a9357611a92611a3f565b5b9250929050565b60008060208385031215611ab157611ab06119c8565b5b600083013567ffffffffffffffff811115611acf57611ace6119cd565b5b611adb85828601611a44565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611b21578082015181840152602081019050611b06565b60008484015250505050565b6000601f19601f8301169050919050565b6000611b4982611ae7565b611b538185611af2565b9350611b63818560208601611b03565b611b6c81611b2d565b840191505092915050565b60006020820190508181036000830152611b918184611b3e565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bc482611b99565b9050919050565b611bd481611bb9565b82525050565b6000602082019050611bef6000830184611bcb565b92915050565b60008115159050919050565b611c0a81611bf5565b82525050565b6000602082019050611c256000830184611c01565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60068110611c6b57611c6a611c2b565b5b50565b6000819050611c7c82611c5a565b919050565b6000611c8c82611c6e565b9050919050565b611c9c81611c81565b82525050565b6000602082019050611cb76000830184611c93565b92915050565b600082825260208201905092915050565b6000611cd982611ae7565b611ce38185611cbd565b9350611cf3818560208601611b03565b611cfc81611b2d565b840191505092915050565b611d10816119d2565b82525050565b60006040830160008301518482036000860152611d338282611cce565b9150506020830151611d486020860182611d07565b508091505092915050565b60006020820190508181036000830152611d6d8184611d16565b905092915050565b611d7e816119d2565b82525050565b6000602082019050611d996000830184611d75565b92915050565b611da881611bb9565b8114611db357600080fd5b50565b600081359050611dc581611d9f565b92915050565b600060208284031215611de157611de06119c8565b5b6000611def84828501611db6565b91505092915050565b611e0181611bf5565b82525050565b606082016000820151611e1d6000850182611df8565b506020820151611e306020850182611df8565b506040820151611e436040850182611d07565b50505050565b6000606082019050611e5e6000830184611e07565b92915050565b7f596f75277265206e6f74206120766f7465720000000000000000000000000000600082015250565b6000611e9a601283611af2565b9150611ea582611e64565b602082019050919050565b60006020820190508181036000830152611ec981611e8d565b9050919050565b7f566f74696e672073657373696f6e20686176656e74207374617274656420796560008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f2c602183611af2565b9150611f3782611ed0565b604082019050919050565b60006020820190508181036000830152611f5b81611f1f565b9050919050565b7f596f75206861766520616c726561647920766f74656400000000000000000000600082015250565b6000611f98601683611af2565b9150611fa382611f62565b602082019050919050565b60006020820190508181036000830152611fc781611f8b565b9050919050565b7f50726f706f73616c206e6f7420666f756e640000000000000000000000000000600082015250565b6000612004601283611af2565b915061200f82611fce565b602082019050919050565b6000602082019050818103600083015261203381611ff7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120a3826119d2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120d5576120d4612069565b5b600182019050919050565b60006040820190506120f56000830185611bcb565b6121026020830184611d75565b9392505050565b7f50726f706f73616c7320617265206e6f7420616c6c6f77656420796574000000600082015250565b600061213f601d83611af2565b915061214a82612109565b602082019050919050565b6000602082019050818103600083015261216e81612132565b9050919050565b50565b6000612185600083611af2565b915061219082612175565b600082019050919050565b600060208201905081810360008301526121b481612178565b9050919050565b82818337600083830152505050565b60006121d68385611af2565b93506121e38385846121bb565b6121ec83611b2d565b840190509392505050565b600060208201905081810360008301526122128184866121ca565b90509392505050565b7f566f7573206e6520706f7576657a20706173206e65207269656e2070726f706f60008201527f7365720000000000000000000000000000000000000000000000000000000000602082015250565b6000612277602383611af2565b91506122828261221b565b604082019050919050565b600060208201905081810360008301526122a68161226a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061232357607f821691505b602082108103612336576123356122dc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261239e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612361565b6123a88683612361565b95508019841693508086168417925050509392505050565b6000819050919050565b60006123e56123e06123db846119d2565b6123c0565b6119d2565b9050919050565b6000819050919050565b6123ff836123ca565b61241361240b826123ec565b84845461236e565b825550505050565b600090565b61242861241b565b6124338184846123f6565b505050565b5b818110156124575761244c600082612420565b600181019050612439565b5050565b601f82111561249c5761246d8161233c565b61247684612351565b81016020851015612485578190505b61249961249185612351565b830182612438565b50505b505050565b600082821c905092915050565b60006124bf600019846008026124a1565b1980831691505092915050565b60006124d883836124ae565b9150826002028217905092915050565b6124f182611ae7565b67ffffffffffffffff81111561250a576125096122ad565b5b612514825461230b565b61251f82828561245b565b600060209050601f8311600181146125525760008415612540578287015190505b61254a85826124cc565b8655506125b2565b601f1984166125608661233c565b60005b8281101561258857848901518255600182019150602085019450602081019050612563565b868310156125a557848901516125a1601f8916826124ae565b8355505b6001600288020188555050505b505050505050565b60006125c5826119d2565b91506125d0836119d2565b92508282039050818111156125e8576125e7612069565b5b92915050565b7f43757272656e7420737461747573206973206e6f7420766f74696e672073657360008201527f73696f6e20656e64656400000000000000000000000000000000000000000000602082015250565b600061264a602a83611af2565b9150612655826125ee565b604082019050919050565b600060208201905081810360008301526126798161263d565b9050919050565b60006040820190506126956000830185611c93565b6126a26020830184611c93565b9392505050565b7f566f74696e673a2050726f706f73616c206e6f742065786973747320286c697360008201527f7420697320656d70747929000000000000000000000000000000000000000000602082015250565b6000612705602b83611af2565b9150612710826126a9565b604082019050919050565b60006020820190508181036000830152612734816126f8565b9050919050565b600081905092915050565b600061275182611ae7565b61275b818561273b565b935061276b818560208601611b03565b80840191505092915050565b60006127838285612746565b915061278f8284612746565b91508190509392505050565b7f2c20000000000000000000000000000000000000000000000000000000000000815250565b60006127cd8284612746565b91506127d88261279b565b60028201915081905092915050565b7f5265676973746572696e672070726f706f73616c732063616e7420626520737460008201527f6172746564206e6f770000000000000000000000000000000000000000000000602082015250565b6000612843602983611af2565b915061284e826127e7565b604082019050919050565b6000602082019050818103600083015261287281612836565b9050919050565b7f5265676973746572696e672070726f706f73616c7320686176656e742073746160008201527f7274656420796574000000000000000000000000000000000000000000000000602082015250565b60006128d5602883611af2565b91506128e082612879565b604082019050919050565b60006020820190508181036000830152612904816128c8565b9050919050565b7f5265676973746572696e672070726f706f73616c73207068617365206973206e60008201527f6f742066696e6973686564000000000000000000000000000000000000000000602082015250565b6000612967602b83611af2565b91506129728261290b565b604082019050919050565b600060208201905081810360008301526129968161295a565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006129f9602683611af2565b9150612a048261299d565b604082019050919050565b60006020820190508181036000830152612a28816129ec565b9050919050565b7f566f7465727320726567697374726174696f6e206973206e6f74206f70656e2060008201527f7965740000000000000000000000000000000000000000000000000000000000602082015250565b6000612a8b602383611af2565b9150612a9682612a2f565b604082019050919050565b60006020820190508181036000830152612aba81612a7e565b9050919050565b7f416c726561647920726567697374657265640000000000000000000000000000600082015250565b6000612af7601283611af2565b9150612b0282612ac1565b602082019050919050565b60006020820190508181036000830152612b2681612aea565b9050919050565b7f2d00000000000000000000000000000000000000000000000000000000000000815250565b6000612b5f8286612746565b9150612b6a82612b2d565b600182019150612b7a8285612746565b9150612b8582612b2d565b600182019150612b958284612746565b9150819050949350505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612bd8602083611af2565b9150612be382612ba2565b602082019050919050565b60006020820190508181036000830152612c0781612bcb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220ed8709a7ef52288505b34a55406d2b5c5755c0b29db327b35733c17e603d943e64736f6c63430008110033";

type VotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Voting__factory extends ContractFactory {
  constructor(...args: VotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Voting> {
    return super.deploy(overrides || {}) as Promise<Voting>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Voting {
    return super.attach(address) as Voting;
  }
  override connect(signer: Signer): Voting__factory {
    return super.connect(signer) as Voting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingInterface {
    return new utils.Interface(_abi) as VotingInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Voting {
    return new Contract(address, _abi, signerOrProvider) as Voting;
  }
}
