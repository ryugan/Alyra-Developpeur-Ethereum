/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Voting, VotingInterface } from "../../contracts/Voting";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "voterAddress",
        type: "address",
      },
    ],
    name: "VoterRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Voting.WorkflowStatus",
        name: "previousStatus",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum Voting.WorkflowStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "WorkflowStatusChange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_desc",
        type: "string",
      },
    ],
    name: "addProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "addVoter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endProposalsRegistering",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endVotingSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getOneProposal",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "voteCount",
            type: "uint256",
          },
        ],
        internalType: "struct Voting.Proposal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getVoter",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isRegistered",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasVoted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "votedProposalId",
            type: "uint256",
          },
        ],
        internalType: "struct Voting.Voter",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isVoter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "setVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startProposalsRegistering",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startVotingSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tallyVotes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "winningProposalID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "workflowStatus",
    outputs: [
      {
        internalType: "enum Voting.WorkflowStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200003860201b60201c565b6200004060201b60201c565b62000104565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61256580620001146000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063a7bfab16116100a2578063d4f50f9811610071578063d4f50f9814610222578063d87c4be314610252578063ee74c67814610270578063f2fde38b1461027a578063f4ab9adf146102965761010b565b8063a7bfab16146101e6578063bdc01431146101f0578063c7038a4e1461020e578063c88af42f146102185761010b565b80638da5cb5b116100de5780638da5cb5b1461015c5780638f32d59b1461017a578063a1edffa214610198578063a2788cce146101b65761010b565b8063230796ae146101105780632fdae3c51461012c578063378a217814610148578063715018a614610152575b600080fd5b61012a60048036038101906101259190611537565b6102b2565b005b610146600480360381019061014191906115c9565b6105ad565b005b610150610830565b005b61015a61099d565b005b6101646109b1565b6040516101719190611657565b60405180910390f35b6101826109da565b60405161018f919061168d565b60405180910390f35b6101a0610a17565b6040516101ad919061171f565b60405180910390f35b6101d060048036038101906101cb9190611537565b610a2a565b6040516101dd9190611816565b60405180910390f35b6101ee610b91565b005b6101f8610c77565b6040516102059190611847565b60405180910390f35b610216610c7d565b005b610220610df8565b005b61023c6004803603810190610237919061188e565b610edd565b604051610249919061190c565b60405180910390f35b61025a611005565b604051610267919061168d565b60405180910390f35b61027861105c565b005b610294600480360381019061028f919061188e565b611142565b005b6102b060048036038101906102ab919061188e565b6111c5565b005b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033890611984565b60405180910390fd5b60036005811115610355576103546116a8565b5b600260009054906101000a900460ff166005811115610377576103766116a8565b5b146103b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ae90611a16565b60405180910390fd5b60011515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff1615150361044d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044490611a82565b60405180910390fd5b6003805490508110610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90611aee565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083151502179055506003818154811061054a57610549611b0e565b5b9060005260206000209060020201600101600081548092919061056c90611b6c565b91905055507f4d99b957a2bc29a30ebd96a7be8e68fe50a3c701db28a91436490b7d53870ca433826040516105a2929190611bb4565b60405180910390a150565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661063c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063390611984565b60405180910390fd5b600160058111156106505761064f6116a8565b5b600260009054906101000a900460ff166005811115610672576106716116a8565b5b146106b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a990611c29565b60405180910390fd5b6040516020016106c190611c6f565b6040516020818303038152906040528051906020012082826040516020016106ea929190611ccb565b6040516020818303038152906040528051906020012003610740576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073790611d61565b60405180910390fd5b6107486114b8565b82828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508160000181905250600381908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190816107d69190611fbc565b506020820151816001015550507f92e393e9b54e2f801d3ea4beb0c5e71a21cc34a5d34b77d0fb8a3aa1650dc18f6001600380549050610816919061208e565b6040516108239190611847565b60405180910390a1505050565b61083861136e565b6004600581111561084c5761084b6116a8565b5b600260009054906101000a900460ff16600581111561086e5761086d6116a8565b5b146108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a590612134565b60405180910390fd5b600080600090505b60038054905081101561092c57600382815481106108d7576108d6611b0e565b5b906000526020600020906002020160010154600382815481106108fd576108fc611b0e565b5b9060005260206000209060020201600101541115610919578091505b808061092490611b6c565b9150506108b6565b50806001819055506005600260006101000a81548160ff0219169083600581111561095a576109596116a8565b5b02179055507f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f60046005604051610992929190612154565b60405180910390a150565b6109a561136e565b6109af60006113ec565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60003373ffffffffffffffffffffffffffffffffffffffff166109fb6109b1565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600260009054906101000a900460ff1681565b610a326114b8565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab890611984565b60405180910390fd5b60038281548110610ad557610ad4611b0e565b5b9060005260206000209060020201604051806040016040529081600082018054610afe90611ddf565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2a90611ddf565b8015610b775780601f10610b4c57610100808354040283529160200191610b77565b820191906000526020600020905b815481529060010190602001808311610b5a57829003601f168201915b505050505081526020016001820154815250509050919050565b610b9961136e565b60036005811115610bad57610bac6116a8565b5b600260009054906101000a900460ff166005811115610bcf57610bce6116a8565b5b14610c0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0690611a16565b60405180910390fd5b6004600260006101000a81548160ff02191690836005811115610c3557610c346116a8565b5b02179055507f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f60036004604051610c6d929190612154565b60405180910390a1565b60015481565b610c8561136e565b60006005811115610c9957610c986116a8565b5b600260009054906101000a900460ff166005811115610cbb57610cba6116a8565b5b14610cfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf2906121ef565b60405180910390fd5b6001600260006101000a81548160ff02191690836005811115610d2157610d206116a8565b5b0217905550610d2e6114b8565b6040518060400160405280600781526020017f47454e4553495300000000000000000000000000000000000000000000000000815250816000018190525060038190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019081610dad9190611fbc565b506020820151816001015550507f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f60006001604051610ded929190612154565b60405180910390a150565b610e0061136e565b60016005811115610e1457610e136116a8565b5b600260009054906101000a900460ff166005811115610e3657610e356116a8565b5b14610e76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6d90612281565b60405180910390fd5b60028060006101000a81548160ff02191690836005811115610e9b57610e9a6116a8565b5b02179055507f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f60016002604051610ed3929190612154565b60405180910390a1565b610ee56114d2565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610f74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6b90611984565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016001820154815250509050919050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16905090565b61106461136e565b60026005811115611078576110776116a8565b5b600260009054906101000a900460ff16600581111561109a576110996116a8565b5b146110da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d190612313565b60405180910390fd5b6003600260006101000a81548160ff02191690836005811115611100576110ff6116a8565b5b02179055507f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f60026003604051611138929190612154565b60405180910390a1565b61114a61136e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b0906123a5565b60405180910390fd5b6111c2816113ec565b50565b6111cd61136e565b600060058111156111e1576111e06116a8565b5b600260009054906101000a900460ff166005811115611203576112026116a8565b5b14611243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123a90612437565b60405180910390fd5b60011515600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515036112d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d0906124a3565b60405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507fb6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd816040516113639190611657565b60405180910390a150565b6113766114b0565b73ffffffffffffffffffffffffffffffffffffffff166113946109b1565b73ffffffffffffffffffffffffffffffffffffffff16146113ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e19061250f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806040016040528060608152602001600081525090565b6040518060600160405280600015158152602001600015158152602001600081525090565b600080fd5b600080fd5b6000819050919050565b61151481611501565b811461151f57600080fd5b50565b6000813590506115318161150b565b92915050565b60006020828403121561154d5761154c6114f7565b5b600061155b84828501611522565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261158957611588611564565b5b8235905067ffffffffffffffff8111156115a6576115a5611569565b5b6020830191508360018202830111156115c2576115c161156e565b5b9250929050565b600080602083850312156115e0576115df6114f7565b5b600083013567ffffffffffffffff8111156115fe576115fd6114fc565b5b61160a85828601611573565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061164182611616565b9050919050565b61165181611636565b82525050565b600060208201905061166c6000830184611648565b92915050565b60008115159050919050565b61168781611672565b82525050565b60006020820190506116a2600083018461167e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600681106116e8576116e76116a8565b5b50565b60008190506116f9826116d7565b919050565b6000611709826116eb565b9050919050565b611719816116fe565b82525050565b60006020820190506117346000830184611710565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611774578082015181840152602081019050611759565b60008484015250505050565b6000601f19601f8301169050919050565b600061179c8261173a565b6117a68185611745565b93506117b6818560208601611756565b6117bf81611780565b840191505092915050565b6117d381611501565b82525050565b600060408301600083015184820360008601526117f68282611791565b915050602083015161180b60208601826117ca565b508091505092915050565b6000602082019050818103600083015261183081846117d9565b905092915050565b61184181611501565b82525050565b600060208201905061185c6000830184611838565b92915050565b61186b81611636565b811461187657600080fd5b50565b60008135905061188881611862565b92915050565b6000602082840312156118a4576118a36114f7565b5b60006118b284828501611879565b91505092915050565b6118c481611672565b82525050565b6060820160008201516118e060008501826118bb565b5060208201516118f360208501826118bb565b50604082015161190660408501826117ca565b50505050565b600060608201905061192160008301846118ca565b92915050565b600082825260208201905092915050565b7f596f75277265206e6f74206120766f7465720000000000000000000000000000600082015250565b600061196e601283611927565b915061197982611938565b602082019050919050565b6000602082019050818103600083015261199d81611961565b9050919050565b7f566f74696e672073657373696f6e20686176656e74207374617274656420796560008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6000611a00602183611927565b9150611a0b826119a4565b604082019050919050565b60006020820190508181036000830152611a2f816119f3565b9050919050565b7f596f75206861766520616c726561647920766f74656400000000000000000000600082015250565b6000611a6c601683611927565b9150611a7782611a36565b602082019050919050565b60006020820190508181036000830152611a9b81611a5f565b9050919050565b7f50726f706f73616c206e6f7420666f756e640000000000000000000000000000600082015250565b6000611ad8601283611927565b9150611ae382611aa2565b602082019050919050565b60006020820190508181036000830152611b0781611acb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b7782611501565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ba957611ba8611b3d565b5b600182019050919050565b6000604082019050611bc96000830185611648565b611bd66020830184611838565b9392505050565b7f50726f706f73616c7320617265206e6f7420616c6c6f77656420796574000000600082015250565b6000611c13601d83611927565b9150611c1e82611bdd565b602082019050919050565b60006020820190508181036000830152611c4281611c06565b9050919050565b50565b6000611c59600083611927565b9150611c6482611c49565b600082019050919050565b60006020820190508181036000830152611c8881611c4c565b9050919050565b82818337600083830152505050565b6000611caa8385611927565b9350611cb7838584611c8f565b611cc083611780565b840190509392505050565b60006020820190508181036000830152611ce6818486611c9e565b90509392505050565b7f566f7573206e6520706f7576657a20706173206e65207269656e2070726f706f60008201527f7365720000000000000000000000000000000000000000000000000000000000602082015250565b6000611d4b602383611927565b9150611d5682611cef565b604082019050919050565b60006020820190508181036000830152611d7a81611d3e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611df757607f821691505b602082108103611e0a57611e09611db0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611e727fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611e35565b611e7c8683611e35565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611eb9611eb4611eaf84611501565b611e94565b611501565b9050919050565b6000819050919050565b611ed383611e9e565b611ee7611edf82611ec0565b848454611e42565b825550505050565b600090565b611efc611eef565b611f07818484611eca565b505050565b5b81811015611f2b57611f20600082611ef4565b600181019050611f0d565b5050565b601f821115611f7057611f4181611e10565b611f4a84611e25565b81016020851015611f59578190505b611f6d611f6585611e25565b830182611f0c565b50505b505050565b600082821c905092915050565b6000611f9360001984600802611f75565b1980831691505092915050565b6000611fac8383611f82565b9150826002028217905092915050565b611fc58261173a565b67ffffffffffffffff811115611fde57611fdd611d81565b5b611fe88254611ddf565b611ff3828285611f2f565b600060209050601f8311600181146120265760008415612014578287015190505b61201e8582611fa0565b865550612086565b601f19841661203486611e10565b60005b8281101561205c57848901518255600182019150602085019450602081019050612037565b868310156120795784890151612075601f891682611f82565b8355505b6001600288020188555050505b505050505050565b600061209982611501565b91506120a483611501565b92508282039050818111156120bc576120bb611b3d565b5b92915050565b7f43757272656e7420737461747573206973206e6f7420766f74696e672073657360008201527f73696f6e20656e64656400000000000000000000000000000000000000000000602082015250565b600061211e602a83611927565b9150612129826120c2565b604082019050919050565b6000602082019050818103600083015261214d81612111565b9050919050565b60006040820190506121696000830185611710565b6121766020830184611710565b9392505050565b7f5265676973746572696e672070726f706f73616c732063616e7420626520737460008201527f6172746564206e6f770000000000000000000000000000000000000000000000602082015250565b60006121d9602983611927565b91506121e48261217d565b604082019050919050565b60006020820190508181036000830152612208816121cc565b9050919050565b7f5265676973746572696e672070726f706f73616c7320686176656e742073746160008201527f7274656420796574000000000000000000000000000000000000000000000000602082015250565b600061226b602883611927565b91506122768261220f565b604082019050919050565b6000602082019050818103600083015261229a8161225e565b9050919050565b7f5265676973746572696e672070726f706f73616c73207068617365206973206e60008201527f6f742066696e6973686564000000000000000000000000000000000000000000602082015250565b60006122fd602b83611927565b9150612308826122a1565b604082019050919050565b6000602082019050818103600083015261232c816122f0565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061238f602683611927565b915061239a82612333565b604082019050919050565b600060208201905081810360008301526123be81612382565b9050919050565b7f566f7465727320726567697374726174696f6e206973206e6f74206f70656e2060008201527f7965740000000000000000000000000000000000000000000000000000000000602082015250565b6000612421602383611927565b915061242c826123c5565b604082019050919050565b6000602082019050818103600083015261245081612414565b9050919050565b7f416c726561647920726567697374657265640000000000000000000000000000600082015250565b600061248d601283611927565b915061249882612457565b602082019050919050565b600060208201905081810360008301526124bc81612480565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006124f9602083611927565b9150612504826124c3565b602082019050919050565b60006020820190508181036000830152612528816124ec565b905091905056fea26469706673582212205d3478f947e3a414b815ee561df56968ebc2fca39c80e7897e802757683eeeca64736f6c63430008110033";

type VotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Voting__factory extends ContractFactory {
  constructor(...args: VotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Voting> {
    return super.deploy(overrides || {}) as Promise<Voting>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Voting {
    return super.attach(address) as Voting;
  }
  override connect(signer: Signer): Voting__factory {
    return super.connect(signer) as Voting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingInterface {
    return new utils.Interface(_abi) as VotingInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Voting {
    return new Contract(address, _abi, signerOrProvider) as Voting;
  }
}
